(set-logic QF_IDL)
(declare-fun W0 () Bool)
(declare-fun d () Int)
(declare-fun bot () Int)
(declare-fun b_B () Bool)
(declare-fun W1 () Bool)
(declare-fun e () Int)
(declare-fun c_B () Bool)
(declare-fun W2 () Bool)
(declare-fun c () Int)
(declare-fun d_B () Bool)
(declare-fun W3 () Bool)
(declare-fun b () Int)
(declare-fun e_B () Bool)
(declare-fun W4 () Bool)
(declare-fun a () Int)
(declare-fun W5 () Bool)
(declare-fun a_B () Bool)
(declare-fun W6 () Bool)
(assert (let ((.def_0 (= true W6))) (let ((.def_1 (< a bot))) (let ((.def_2 (= W6 .def_1))) (let ((.def_3 (or W4 W5))) (let ((.def_4 (= a_B .def_3))) (let ((.def_5 (and a_B c_B))) (let ((.def_6 (< c a))) (let ((.def_7 (=> .def_6 .def_5))) (let ((.def_8 (and a_B b_B))) (let ((.def_9 (< b a))) (let ((.def_10 (=> .def_9 .def_8))) (let ((.def_11 (and .def_10 .def_7))) (let ((.def_12 (= W5 .def_6))) (let ((.def_13 (= W4 .def_9))) (let ((.def_14 (and .def_13 .def_12))) (let ((.def_15 (= e_B W3))) (let ((.def_16 (and e_B b_B))) (let ((.def_17 (< b e))) (let ((.def_18 (=> .def_17 .def_16))) (let ((.def_19 (= W3 .def_17))) (let ((.def_20 (= d_B W2))) (let ((.def_21 (and d_B c_B))) (let ((.def_22 (< c d))) (let ((.def_23 (=> .def_22 .def_21))) (let ((.def_24 (= W2 .def_22))) (let ((.def_25 (= c_B W1))) (let ((.def_26 (< e bot))) (let ((.def_27 (not .def_26))) (let ((.def_28 (= W1 .def_27))) (let ((.def_29 (= b_B W0))) (let ((.def_30 (< d bot))) (let ((.def_31 (not .def_30))) (let ((.def_32 (= W0 .def_31))) (let ((.def_33 (and .def_32 true .def_29 .def_28 true .def_25 .def_24 .def_23 .def_20 .def_19 .def_18 .def_15 .def_14 .def_11 .def_4 .def_2 true .def_0))) .def_33)))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)