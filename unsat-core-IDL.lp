(set-option :produce-unsat-cores true)
(set-logic QF_IDL)
(declare-fun W53 () Bool)
(declare-fun W33 () Bool)
(declare-fun W21 () Bool)
(declare-fun W50 () Bool)
(declare-fun |move(0,1)| () Int)
(declare-fun |bot| () Int)
(declare-fun |where(0,1)| () Int)
(declare-fun |put(0,1,1)| () Int)
(declare-fun |on(1,1,3)| () Int)
(declare-fun |move(0,3)| () Int)

(assert (= W53 (not (< |move(0,1)| |bot|) ))) 
(assert (= W21 (and (< |where(0,1)| |put(0,1,1)|) (< |move(0,1)| |put(0,1,1)|) )) )
(assert (= (< |put(0,1,1)| bot) (or W21 )))
(assert (= W33 (and (< |where(0,1)| |on(1,1,3)|) (< |move(0,3)| |on(1,1,3)|) ))) 
(assert (= (< |on(1,1,3)| bot) (or W33 ))) 
(assert (= W50 (not (not (< |on(1,1,3)| bot)) ))) 
(assert (and (=> (< |where(0,1)| |on(1,1,3)|) (and (< |on(1,1,3)| bot) (< |where(0,1)| bot)))(=> (< |move(0,3)| |on(1,1,3)|) (and (< |on(1,1,3)| bot) (< |move(0,3)| bot))))) 
(assert (and (=> (< |where(0,1)| |put(0,1,1)|) (and (< |put(0,1,1)| bot) (< |where(0,1)| bot)))(=> (< |move(0,1)| |put(0,1,1)|) (and (< |put(0,1,1)| bot) (< |move(0,1)| bot)))))
(assert (= true (and W50 W53 )))
(check-sat)
(get-unsat-core)